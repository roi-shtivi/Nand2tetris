// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=dmux1, b=dmux2, c=dmux3, d=dmux4, e=dmux5, f=dmux6, g=dmux7,h=dmux8);
	RAM512(in=in, load=dmux1, address=address[3..11], out=ram512out1);
	RAM512(in=in, load=dmux2, address=address[3..11], out=ram512out2);
	RAM512(in=in, load=dmux3, address=address[3..11], out=ram512out3);
	RAM512(in=in, load=dmux4, address=address[3..11], out=ram512out4);
	RAM512(in=in, load=dmux5, address=address[3..11], out=ram512out5);
	RAM512(in=in, load=dmux6, address=address[3..11], out=ram512out6);
	RAM512(in=in, load=dmux7, address=address[3..11], out=ram512out7);
	RAM512(in=in, load=dmux8, address=address[3..11], out=ram512out8);
	Mux8Way16(a=ram512out1, b=ram512out2, c=ram512out3, d=ram512out4, e=ram512out5, f=ram512out6, g=ram512out7, h=ram512out8, sel=address[0..2], out=out);

}